name: Deploy Worker
on:
  push:
    branches:
      - master
jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.12.0
          cache: "yarn"
      - name: Install dependencies
        run: yarn
      - name: Lint
        run: yarn lint:ga

  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.12.0
          cache: "yarn"
      - name: Install dependencies
        run: yarn
      - name: Set up environmental variables
        env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          ACCESSTOKEN_SECRET: ${{ secrets.ACCESSTOKEN_SECRET }}
          REFRESHTOKEN_SECRET: ${{ secrets.REFRESHTOKEN_SECRET }}
        run: |
          touch .dev.vars
          echo JWT_SECRET="$JWT_SECRET" >> .dev.vars
          echo ACCESSTOKEN_SECRET="$ACCESSTOKEN_SECRET" >> .dev.vars
          echo REFRESHTOKEN_SECRET="$REFRESHTOKEN_SECRET" >> .dev.vars
        shell: bash
      - name: Run tests
        run: yarn test:ga

  Deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [Lint, Test]
    steps:
      - uses: actions/checkout@v4
      - name: Enable corepack
        run: corepack enable
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.12.0
          cache: "yarn"
      - name: Build & Deploy Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  Seed:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: Deploy
    steps:
      - env:
          SEED_SECRET: ${{ secrets.SEED_TOKEN }}
        run: |
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" -X POST "https://api.authabl.com/seed" -H "Authorization: Bearer $SEED_TOKEN" -H "Content-Type: application/json")
          
          echo "HTTP Status: $STATUS_CODE"
          
          if [[ "$STATUS_CODE" -lt 200 || "$STATUS_CODE" -ge 300 ]]; then
            echo "Request failed with status $STATUS_CODE"
            exit 1
          fi  
        
        
